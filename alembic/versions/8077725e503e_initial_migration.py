"""Initial migration

Revision ID: 8077725e503e
Revises: 
Create Date: 2025-04-25 14:43:34.917569

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8077725e503e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employees',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('nrp_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=13), nullable=True),
    sa.Column('position', sa.String(length=100), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('face_encoding', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('employee_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('nrp_id')
    )
    op.create_index(op.f('ix_employees_employee_id'), 'employees', ['employee_id'], unique=False)
    op.create_table('roles',
    sa.Column('roles_id', sa.Integer(), nullable=False),
    sa.Column('roles_name', sa.String(length=25), nullable=True),
    sa.PrimaryKeyConstraint('roles_id'),
    sa.UniqueConstraint('roles_name')
    )
    op.create_index(op.f('ix_roles_roles_id'), 'roles', ['roles_id'], unique=False)
    op.create_table('attendance',
    sa.Column('attendance_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('clock_in', sa.Time(), nullable=True),
    sa.Column('clock_out', sa.Time(), nullable=True),
    sa.Column('attendance_date', sa.Date(), nullable=True),
    sa.Column('attendance_status', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.employee_id'], ),
    sa.PrimaryKeyConstraint('attendance_id')
    )
    op.create_index(op.f('ix_attendance_attendance_id'), 'attendance', ['attendance_id'], unique=False)
    op.create_table('permissions',
    sa.Column('permissions_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('permission_type', sa.String(length=50), nullable=True),
    sa.Column('request_date', sa.Date(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('permission_status', sa.String(length=10), nullable=True),
    sa.Column('approved_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.employee_id'], ),
    sa.PrimaryKeyConstraint('permissions_id')
    )
    op.create_index(op.f('ix_permissions_permissions_id'), 'permissions', ['permissions_id'], unique=False)
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.employee_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_employee_id'), 'user', ['employee_id'], unique=False)
    op.create_index(op.f('ix_user_user_id'), 'user', ['user_id'], unique=False)
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('roles_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['roles_id'], ['roles.roles_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'roles_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_user_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_employee_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_permissions_permissions_id'), table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_attendance_attendance_id'), table_name='attendance')
    op.drop_table('attendance')
    op.drop_index(op.f('ix_roles_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_employees_employee_id'), table_name='employees')
    op.drop_table('employees')
    # ### end Alembic commands ###
