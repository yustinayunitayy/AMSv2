export async function startLivenessCheck() {
  console.log("Initializing FaceMesh...");
  const videoElement = document.getElementById('faceVideo');

  document.getElementById('captureFaceBtn').disabled = true;

  const camera = new Camera(videoElement, {
    onFrame: async () => {
      await faceMesh.send({ image: videoElement });
    },
    width: 640,
    height: 480,
  });

  const faceMesh = new FaceMesh({
    locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`,
  });

  faceMesh.setOptions({
    maxNumFaces: 1,
    refineLandmarks: true,
    minDetectionConfidence: 0.5,
    minTrackingConfidence: 0.5,
  });

  const leftEyeIndices = [33, 160, 158, 133, 153, 144];
  const rightEyeIndices = [263, 387, 385, 362, 380, 373];
  let blinkCount = 0;
  let lastEAR = 1.0;

  function getEAR(landmarks, leftEyeIndices, rightEyeIndices) {
    const calcEAR = (indices) => {
      const p1 = landmarks[indices[1]];
      const p2 = landmarks[indices[5]];
      const p3 = landmarks[indices[2]];
      const p4 = landmarks[indices[4]];
      const p5 = landmarks[indices[0]];
      const p6 = landmarks[indices[3]];

      const vertical1 = Math.hypot(p2.x - p4.x, p2.y - p4.y);
      const vertical2 = Math.hypot(p3.x - p5.x, p3.y - p5.y);
      const horizontal = Math.hypot(p1.x - p6.x, p1.y - p6.y);

      console.log(`Vertical1: ${vertical1.toFixed(4)}, Vertical2: ${vertical2.toFixed(4)}, Horizontal: ${horizontal.toFixed(4)}`);

      return (vertical1 + vertical2) / (2.0 * horizontal);
    };

    const leftEAR = calcEAR(leftEyeIndices);
    const rightEAR = calcEAR(rightEyeIndices);
    return (leftEAR + rightEAR) / 2.0;
  }

  return new Promise((resolve) => {
    faceMesh.onResults((results) => {
      console.log('onResults triggered...');
      if (results.multiFaceLandmarks.length > 0) {
        const landmarks = results.multiFaceLandmarks[0];
        const currentEAR = getEAR(landmarks, leftEyeIndices, rightEyeIndices);
        console.log(`Current EAR: ${currentEAR.toFixed(4)}, Last EAR: ${lastEAR.toFixed(4)}, Blink Count: ${blinkCount}`);

        if (lastEAR - currentEAR > 0.15 && currentEAR < 0.2) {
          blinkCount++;
          console.log(`Blink Detected! ✅ Blink Count: ${blinkCount}`);

          if (blinkCount >= 1) {
            console.log("Liveness PASSED ✅✅✅");
            document.getElementById('captureFaceBtn').disabled = false;
            camera.stop();
            resolve(true);
          }
        }

        lastEAR = currentEAR;
      } else {
        console.log("No face landmarks detected.");
      }
    });

    console.log("Starting Camera...");
    camera.start();
  });
}
